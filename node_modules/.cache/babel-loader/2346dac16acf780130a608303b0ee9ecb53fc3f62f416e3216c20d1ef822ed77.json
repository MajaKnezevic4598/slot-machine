{"ast":null,"code":"export const losingCombination = (arr1, arr2, arr3, arr4, arr5) => {\n  let matrix = [[...arr1], [...arr2], [...arr3], [...arr4], [...arr5]];\n  let min = Math.min(...arr1);\n  let max = Math.max(...arr1);\n  for (let i = 0; i < matrix.length - 2; i++) {\n    for (let j = 0; j < arr1.length; j++) {\n      if (matrix[i][j] === matrix[i + 1][j] && matrix[i][j] === matrix[i + 2][j]) {\n        let random = Math.floor(Math.random() * (max - min) + min);\n        if (random === matrix[i][j]) {\n          random = random + 1;\n        }\n        let losingIndex = matrix[i][j];\n        let arrayToChangePosition = matrix[i];\n        const lastIndex = arrayToChangePosition.lastIndexOf(random);\n        arrayToChangePosition[j] = random;\n        arrayToChangePosition[lastIndex] = losingIndex;\n        matrix[i] = arrayToChangePosition;\n      }\n    }\n  }\n  return matrix;\n};\nfunction winningArray(arr) {\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] === arr[i + 1] && arr[i] === arr[i + 2]) {\n      return arr;\n    }\n    if (arr[i] === arr[i + 1] && i === 0) {\n      arr[i + 2] = arr[i];\n      return arr;\n    }\n    if (arr[i] === arr[i + 1] && i !== 0) {\n      arr[i - 1] = arr[i];\n      return arr;\n    }\n  }\n  let winning = arr[0];\n  arr[1] = winning;\n  arr[2] = winning;\n  return arr;\n}\n\n// export const winningCombination = (arr1, arr2, arr3, arr4, arr5) => {\n//   let matrix = [[...arr1], [...arr2], [...arr3], [...arr4], [...arr5]];\n//   for (let i = 0; i < matrix.length - 2; i++) {\n//     for (let j = 0; j < arr1.length; j++) {\n//       if (matrix[i][j] === matrix[i + 1][j]) {\n//         let winingIndex = matrix[i][j];\n//         let arrayToChangePosition = matrix[i + 2];\n//         let indexToSwithPositon = arrayToChangePosition.indexOf(winingIndex);\n//         arrayToChangePosition[indexToSwithPositon] = arrayToChangePosition[j];\n//         arrayToChangePosition[j] = winingIndex;\n//         matrix[i + 2] = arrayToChangePosition;\n//       }\n//     }\n//   }\n//   return matrix;\n// };\n\nexport const settingSymbols = (reelIndexArray, slotSymbols) => {\n  let indexes = [...reelIndexArray];\n  let symbols = [];\n  for (let i = 0; i < indexes.length; i++) {\n    slotSymbols.forEach(item => {\n      if (item.id === indexes[i]) {\n        symbols.push({\n          ...item\n        });\n      }\n    });\n  }\n  return [...symbols, ...symbols];\n};\n\n//function that calculate how much do we need to move the div to be centered,\n//after stoping the animation\n\nexport const deltaAfterStopingAnimation = (positionFromBottom, symbolHeight) => {\n  let delta;\n  if (positionFromBottom % symbolHeight === 0) return 0;\n  if (positionFromBottom < symbolHeight) return positionFromBottom;else {\n    while (positionFromBottom - symbolHeight >= symbolHeight / 4) {\n      delta = positionFromBottom - symbolHeight;\n      positionFromBottom = positionFromBottom - symbolHeight;\n    }\n    return delta;\n  }\n};","map":{"version":3,"names":["losingCombination","arr1","arr2","arr3","arr4","arr5","matrix","min","Math","max","i","length","j","random","floor","losingIndex","arrayToChangePosition","lastIndex","lastIndexOf","winningArray","arr","winning","settingSymbols","reelIndexArray","slotSymbols","indexes","symbols","forEach","item","id","push","deltaAfterStopingAnimation","positionFromBottom","symbolHeight","delta"],"sources":["C:/Users/Maja Knezevic/Desktop/s/src/helperFunctions.js"],"sourcesContent":["export const losingCombination = (arr1, arr2, arr3, arr4, arr5) => {\n  let matrix = [[...arr1], [...arr2], [...arr3], [...arr4], [...arr5]];\n  let min = Math.min(...arr1);\n  let max = Math.max(...arr1);\n\n  for (let i = 0; i < matrix.length - 2; i++) {\n    for (let j = 0; j < arr1.length; j++) {\n      if (\n        matrix[i][j] === matrix[i + 1][j] &&\n        matrix[i][j] === matrix[i + 2][j]\n      ) {\n        let random = Math.floor(Math.random() * (max - min) + min);\n        if (random === matrix[i][j]) {\n          random = random + 1;\n        }\n\n        let losingIndex = matrix[i][j];\n\n        let arrayToChangePosition = matrix[i];\n\n        const lastIndex = arrayToChangePosition.lastIndexOf(random);\n\n        arrayToChangePosition[j] = random;\n        arrayToChangePosition[lastIndex] = losingIndex;\n\n        matrix[i] = arrayToChangePosition;\n      }\n    }\n  }\n  return matrix;\n};\n\nfunction winningArray(arr) {\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] === arr[i + 1] && arr[i] === arr[i + 2]) {\n      return arr;\n    }\n    if (arr[i] === arr[i + 1] && i === 0) {\n      arr[i + 2] = arr[i];\n      return arr;\n    }\n    if (arr[i] === arr[i + 1] && i !== 0) {\n      arr[i - 1] = arr[i];\n      return arr;\n    }\n  }\n\n  let winning = arr[0];\n  arr[1] = winning;\n  arr[2] = winning;\n  return arr;\n}\n\n// export const winningCombination = (arr1, arr2, arr3, arr4, arr5) => {\n//   let matrix = [[...arr1], [...arr2], [...arr3], [...arr4], [...arr5]];\n//   for (let i = 0; i < matrix.length - 2; i++) {\n//     for (let j = 0; j < arr1.length; j++) {\n//       if (matrix[i][j] === matrix[i + 1][j]) {\n//         let winingIndex = matrix[i][j];\n//         let arrayToChangePosition = matrix[i + 2];\n//         let indexToSwithPositon = arrayToChangePosition.indexOf(winingIndex);\n//         arrayToChangePosition[indexToSwithPositon] = arrayToChangePosition[j];\n//         arrayToChangePosition[j] = winingIndex;\n//         matrix[i + 2] = arrayToChangePosition;\n//       }\n//     }\n//   }\n//   return matrix;\n// };\n\nexport const settingSymbols = (reelIndexArray, slotSymbols) => {\n  let indexes = [...reelIndexArray];\n\n  let symbols = [];\n  for (let i = 0; i < indexes.length; i++) {\n    slotSymbols.forEach((item) => {\n      if (item.id === indexes[i]) {\n        symbols.push({ ...item });\n      }\n    });\n  }\n  return [...symbols, ...symbols];\n};\n\n//function that calculate how much do we need to move the div to be centered,\n//after stoping the animation\n\nexport const deltaAfterStopingAnimation = (\n  positionFromBottom,\n  symbolHeight\n) => {\n  let delta;\n  if (positionFromBottom % symbolHeight === 0) return 0;\n  if (positionFromBottom < symbolHeight) return positionFromBottom;\n  else {\n    while (positionFromBottom - symbolHeight >= symbolHeight / 4) {\n      delta = positionFromBottom - symbolHeight;\n      positionFromBottom = positionFromBottom - symbolHeight;\n    }\n    return delta;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}